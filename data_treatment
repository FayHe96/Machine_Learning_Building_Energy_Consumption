'''PART1 IMPORTING DATA'''

#You need to close the excel sheets when you are importing the data from it

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import mglearn
from IPython.display import display

'''Energy data'''
#add the path from your computer below, replace all the "\" with '\\' and put a "#" in front of the path that you are not using
#path_e="C:\\Users\\fayhe\\OneDrive - University of Calgary\\MachineLearningProject\\Final Paper\\EnergySmallOffice.xlsx"
path_e="C:\\Users\\EERG\\OneDrive - University of Calgary\\MachineLearningProject\\Final Paper\\EnergySmallOffice.xlsx"

'''weather data'''
path_w="C:\\Users\\EERG\\OneDrive - University of Calgary\\MachineLearningProject\\Final Paper\\Weatherdata.xlsx"
#path_w="C:\\Users\\fayhe\\OneDrive - University of Calgary\\MachineLearningProject\\Final Paper\\Weatherdata.xlsx"
#path_w = '/Users/britanderson/Documents/5th Year/ENCH 561/Weatherdata.xlsx'
#path_w = pd.read_excel('/Users/britanderson/Documents/5th Year/ENCH 561/Weatherdata.xlsx')

e_Baltimore2013=pd.read_excel(path_e, sheet_name = "Baltimore2013")
e_Baltimore2014=pd.read_excel(path_e, sheet_name = "Baltimore2014")
e_HillCity2013=pd.read_excel(path_e, sheet_name = "HillCity2013")
e_HillCity2014=pd.read_excel(path_e, sheet_name = "HillCity2014")
e_Olympus2013=pd.read_excel(path_e, sheet_name = "Olympus2013")
e_Olympus2014=pd.read_excel(path_e, sheet_name = "Olympus2014")
e_QSTA2013=pd.read_excel(path_e, sheet_name = "QSTA2013")
e_QSTA2014=pd.read_excel(path_e, sheet_name = "QSTA2014")

w_Olympus2013=pd.read_excel(path_w, sheet_name = "OlympusWeatherData_2013")
w_Olympus2014=pd.read_excel(path_w, sheet_name = "OlympusWeatherData_2014")
w_Baltimore2013=pd.read_excel(path_w, sheet_name = "WeatherData_Baltimore2013")
w_Baltimore2014=pd.read_excel(path_w, sheet_name = "WeatherData_Baltimore2014")
w_HillCity2013=pd.read_excel(path_w, sheet_name = "WeatherData_HillCity2013")
w_HillCity2014=pd.read_excel(path_w, sheet_name = "WeatherData_HillCity2014")
w_QSTA2013=pd.read_excel(path_w, sheet_name = "WeatherData_QSTA2013")
w_QSTA2014=pd.read_excel(path_w, sheet_name = "WeatherData_QSTA2014")


sheet_order=[e_Baltimore2013, e_Baltimore2014, e_HillCity2013, e_HillCity2014, e_Olympus2013, e_Olympus2014, e_QSTA2013, e_QSTA2014]
sheet_order2 = [w_Baltimore2013, w_Baltimore2014, w_HillCity2013, w_HillCity2014, w_Olympus2013, w_Olympus2014, w_QSTA2013, w_QSTA2014]



#import schedule variables
Lighting = list(range(0,8761))
##Lighting Schedule is as follows:
count = 1

#daycount
#Summer daycount starts on a Wednesday
daycount = 1

#summer values
#from May 1st to October 31st
for i in range (2881, 7296):
    
    if count < 5:
        Lighting[i] = 0.05
    elif count >= 5 and count < 7:
        Lighting[i] = 0.1
    elif count >=7 and count < 8:
        Lighting[i] = 0.3
    elif count >=8 and count < 17:
        Lighting[i] = 0.9
    elif count >=17 and count < 18:
        Lighting[i] = 0.5
    elif count >=18 and count < 20:
        Lighting[i] = 0.3
    elif count >=20 and count < 22:
        Lighting[i] = 0.2
    elif count >=22 and count < 23:
        Lighting[i] = 0.1
    elif count >=23 and count <= 24:
        Lighting[i] = 0.05
    
    #increase count
    #reset count to 1 if it has reached 24
    if count == 24:
        count = 1
    else:
        count = count + 1
    
    #for saturdays
    if daycount % 7 == 4:
        if count < 6:
            Lighting[i] = 0.05
        elif count >= 6 and count < 8:
            Lighting[i] = 0.1
        elif count >=8 and count < 12:
            Lighting[i] = 0.3
        elif count >=12 and count < 17:
            Lighting[i] = 0.15
        elif count >=17 and count <= 24:
            Lighting[i] = 0.05
    
    #for sundays
    if daycount % 7 == 5:
        Lighting[i] = 0.05
        
    daycount = daycount + 1

#winter values
#from November 1st to April 30
#Jan 1st is a Tuesday
#Nov 1st is a Friday
daycount = 1
for i in range (0, 2880):
    
    if count < 6:
        Lighting[i] = 0.05
    elif count >= 6 and count < 8:
        Lighting[i] = 0.1
    elif count >=8 and count < 12:
        Lighting[i] = 0.3
    elif count >=12 and count < 17:
        Lighting[i] = 0.15
    elif count >=17 and count <= 24:
        Lighting[i] = 0.05
    
    #increase count
    #reset count to 1 if it has reached 24
    if count == 24:
        count = 1
    else:
        count = count + 1
        
        #for sundays
    if daycount % 7 == 6:
        Lighting[i] = 0.05
        
    daycount = daycount + 1
    
daycount = 1
for i in range (7297, 8760):
    if count < 6:
        Lighting[i] = 0.05
    elif count >= 6 and count < 8:
        Lighting[i] = 0.1
    elif count >=8 and count < 12:
        Lighting[i] = 0.3
    elif count >=12 and count < 17:
        Lighting[i] = 0.15
    elif count >=17 and count <= 24:
        Lighting[i] = 0.05
    
    #increase count
    #reset count to 1 if it has reached 24
    if count == 24:
        count = 1
    else:
        count = count + 1
        
        #for sundays
    if daycount % 7 == 3:
        Lighting[i] = 0.05
        
    daycount = daycount + 1
    
#initialize Occupancy
Occupancy = list(range(0,8761))
count = 1

#summer values
#from May 1st to October 31st
daycount = 1
for i in range (2881, 7296):
    
    if count < 6:
        Occupancy[i] = 0.00
    elif count >= 6 and count < 7:
        Occupancy[i] = 0.1
    elif count >=7 and count < 8:
        Occupancy[i] = 0.2
    elif count >=8 and count < 12:
        Occupancy[i] = 0.95
    elif count >=12 and count < 13:
        Occupancy[i] = 0.5
    elif count >=13 and count < 17:
        Occupancy[i] = 0.95
    elif count >=17 and count < 18:
        Occupancy[i] = 0.3
    elif count >=18 and count < 22:
        Occupancy[i] = 0.1
    elif count >=22 and count <= 24:
        Occupancy[i] = 0.05
    
    #increase count
    #reset count to 1 if it has reached 24
    if count == 24:
        count = 1
    else:
        count = count + 1

    #for saturdays
    if daycount % 7 == 4:
        if count < 6:
            Occupancy[i] = 0.00
        elif count >= 6 and count < 8:
            Occupancy[i] = 0.1
        elif count >=8 and count < 12:
            Occupancy[i] = 0.3
        elif count >=12 and count < 17:
            Occupancy[i] = 0.1
        elif count >=17 and count < 19:
            Occupancy[i] = 0.05
        elif count >=19 and count <= 24:
            Occupancy[i] = 0.00
    
    #for sundays
    if daycount % 7 == 5:
        if count < 6:
            Occupancy[i] = 0.0
        elif count >=6 and count < 18:
            Occupancy[i] = 0.05
        elif count >=18 and count <= 24:
            Occupancy[i] = 0.0
        
    daycount = daycount + 1
    
#winter values
#from November 1st to April 30
daycount = 1
for i in range (0, 2880):
    
    if count < 6:
        Occupancy[i] = 0.00
    elif count >= 6 and count < 8:
        Occupancy[i] = 0.1
    elif count >=8 and count < 12:
        Occupancy[i] = 0.3
    elif count >=12 and count < 17:
        Occupancy[i] = 0.1
    elif count >=17 and count < 19:
        Occupancy[i] = 0.05
    elif count >=19 and count <= 24:
        Occupancy[i] = 0.00
    
    #increase count
    #reset count to 1 if it has reached 24
    if count == 24:
        count = 1
    else:
        count = count + 1
        
    #for sundays
    if daycount % 7 == 6:
        if count < 6:
            Occupancy[i] = 0.0
        elif count >=6 and count < 18:
            Occupancy[i] = 0.05
        elif count >=18 and count <= 24:
            Occupancy[i] = 0.0
        
    daycount = daycount + 1
        
daycount = 1
for i in range (7297, 8760):
    if count < 6:
        Occupancy[i] = 0.00
    elif count >= 6 and count < 8:
        Occupancy[i] = 0.1
    elif count >=8 and count < 12:
        Occupancy[i] = 0.3
    elif count >=12 and count < 17:
        Occupancy[i] = 0.1
    elif count >=17 and count < 19:
        Occupancy[i] = 0.05
    elif count >=19 and count <= 24:
        Occupancy[i] = 0.00
    
    #increase count
    #reset count to 1 if it has reached 24
    if count == 24:
        count = 1
    else:
        count = count + 1
        
    #for sundays
    if daycount % 7 == 3:
        if count < 6:
            Occupancy[i] = 0.0
        elif count >=6 and count < 18:
            Occupancy[i] = 0.05
        elif count >=18 and count <= 24:
            Occupancy[i] = 0.0
        
    daycount = daycount + 1
    
#Initialize Service Water Heating
ServiceWaterHeating = list(range(0,8761))
count = 1

daycount = 1
#summer values
#from May 1st to October 31st
for i in range (2881, 7296):
    
    if count < 5:
        ServiceWaterHeating[i] = 0.05
    elif count >=5 and count < 6:
        ServiceWaterHeating[i] = 0.08
    elif count >= 6 and count < 7:
        ServiceWaterHeating[i] = 0.07
    elif count >=7 and count < 8:
        ServiceWaterHeating[i] = 0.19
    elif count >=8 and count < 9:
        ServiceWaterHeating[i] = 0.35
    elif count >=9 and count <10:
        ServiceWaterHeating[i] = 0.38
    elif count >=10 and count <11:
        ServiceWaterHeating[i] = 0.39
    elif count >=11 and count <12:
        ServiceWaterHeating[i] = 0.47
    elif count >=12 and count <13:
        ServiceWaterHeating[i] = 0.57
    elif count >=13 and count <14:
        ServiceWaterHeating[i] = 0.54
    elif count >=14 and count <15:
        ServiceWaterHeating[i] = 0.34
    elif count >=15 and count <16:
        ServiceWaterHeating[i] = 0.33
    elif count >=16 and count <17:
        ServiceWaterHeating[i] = 0.44
    elif count >=17 and count < 18:
        ServiceWaterHeating[i] = 0.26
    elif count >=18 and count < 19:
        ServiceWaterHeating[i] = 0.21
    elif count >=19 and count < 20:
        ServiceWaterHeating[i] = 0.15
    elif count >=20 and count < 21:
        ServiceWaterHeating[i] = 0.17
    elif count >=21 and count < 22:
        ServiceWaterHeating[i] = 0.08
    elif count >=22 and count <= 24:
        ServiceWaterHeating[i] = 0.05
    
    #increase count
    #reset count to 1 if it has reached 24
    if count == 24:
        count = 1
    else:
        count = count + 1

        
    #for saturdays
    if daycount % 7 == 4:
        if count < 5:
            ServiceWaterHeating[i] = 0.05
        elif count >=5 and count < 6:
            ServiceWaterHeating[i] = 0.08
        elif count >= 6 and count < 7:
            ServiceWaterHeating[i] = 0.07
        elif count >=7 and count < 8:
            ServiceWaterHeating[i] = 0.11
        elif count >=8 and count < 9:
            ServiceWaterHeating[i] = 0.15
        elif count >=9 and count <10:
            ServiceWaterHeating[i] = 0.21
        elif count >=10 and count <11:
            ServiceWaterHeating[i] = 0.19
        elif count >=11 and count <12:
            ServiceWaterHeating[i] = 0.23
        elif count >=12 and count <13:
            ServiceWaterHeating[i] = 0.20
        elif count >=13 and count <14:
            ServiceWaterHeating[i] = 0.19
        elif count >=14 and count <15:
            ServiceWaterHeating[i] = 0.15
        elif count >=15 and count <16:
            ServiceWaterHeating[i] = 0.13
        elif count >=16 and count <17:
            ServiceWaterHeating[i] = 0.14
        elif count >=17 and count < 21:
            ServiceWaterHeating[i] = 0.07
        elif count >=21 and count < 22:
            ServiceWaterHeating[i] = 0.09
        elif count >=22 and count <= 24:
            ServiceWaterHeating[i] = 0.05
    
        #increase count
        #reset count to 1 if it has reached 24
        if count == 24:
            count = 1
        else:
            count = count + 1
    
    #for sundays
    if daycount % 7 == 5:
        if count <5:
            ServiceWaterHeating[i] = 0.04
        if count >=5 and count < 6:
            ServiceWaterHeating[i] = 0.07
        if count >=6 and count < 11:
            ServiceWaterHeating[i] = 0.04
        if count >=11 and count < 13:
            ServiceWaterHeating[i] = 0.06
        if count >=13 and count < 14:
            ServiceWaterHeating[i] = 0.09
        if count >=14 and count < 15:
            ServiceWaterHeating[i] = 0.06
        if count >=15 and count < 21:
            ServiceWaterHeating[i] = 0.04
        if count >=21 and count < 22:
            ServiceWaterHeating[i] = 0.07
        if count >=22 and count <= 24:
            ServiceWaterHeating[i] = 0.04




        
        
    daycount = daycount + 1


#winter values
#from November 1st to April 30
daycount = 1
for i in range (0, 2880):
    
    if count < 5:
        ServiceWaterHeating[i] = 0.05
    elif count >=5 and count < 6:
        ServiceWaterHeating[i] = 0.08
    elif count >= 6 and count < 7:
        ServiceWaterHeating[i] = 0.07
    elif count >=7 and count < 8:
        ServiceWaterHeating[i] = 0.11
    elif count >=8 and count < 9:
        ServiceWaterHeating[i] = 0.15
    elif count >=9 and count <10:
        ServiceWaterHeating[i] = 0.21
    elif count >=10 and count <11:
        ServiceWaterHeating[i] = 0.19
    elif count >=11 and count <12:
        ServiceWaterHeating[i] = 0.23
    elif count >=12 and count <13:
        ServiceWaterHeating[i] = 0.20
    elif count >=13 and count <14:
        ServiceWaterHeating[i] = 0.19
    elif count >=14 and count <15:
        ServiceWaterHeating[i] = 0.15
    elif count >=15 and count <16:
        ServiceWaterHeating[i] = 0.13
    elif count >=16 and count <17:
        ServiceWaterHeating[i] = 0.14
    elif count >=17 and count < 21:
        ServiceWaterHeating[i] = 0.07
    elif count >=21 and count < 22:
        ServiceWaterHeating[i] = 0.09
    elif count >=22 and count <= 24:
        ServiceWaterHeating[i] = 0.05
    
    #increase count
    #reset count to 1 if it has reached 24
    if count == 24:
        count = 1
    else:
        count = count + 1
    
    #for sundays
    if daycount % 7 == 6:
        if count <5:
            ServiceWaterHeating[i] = 0.04
        if count >=5 and count < 6:
            ServiceWaterHeating[i] = 0.07
        if count >=6 and count < 11:
            ServiceWaterHeating[i] = 0.04
        if count >=11 and count < 13:
            ServiceWaterHeating[i] = 0.06
        if count >=13 and count < 14:
            ServiceWaterHeating[i] = 0.09
        if count >=14 and count < 15:
            ServiceWaterHeating[i] = 0.06
        if count >=15 and count < 21:
            ServiceWaterHeating[i] = 0.04
        if count >=21 and count < 22:
            ServiceWaterHeating[i] = 0.07
        if count >=22 and count <= 24:
            ServiceWaterHeating[i] = 0.04

    daycount = daycount + 1

daycount = 1
for i in range (7297, 8760):
    
    if count < 5:
        ServiceWaterHeating[i] = 0.05
    elif count >=5 and count < 6:
        ServiceWaterHeating[i] = 0.08
    elif count >= 6 and count < 7:
        ServiceWaterHeating[i] = 0.07
    elif count >=7 and count < 8:
        ServiceWaterHeating[i] = 0.11
    elif count >=8 and count < 9:
        ServiceWaterHeating[i] = 0.15
    elif count >=9 and count <10:
        ServiceWaterHeating[i] = 0.21
    elif count >=10 and count <11:
        ServiceWaterHeating[i] = 0.19
    elif count >=11 and count <12:
        ServiceWaterHeating[i] = 0.23
    elif count >=12 and count <13:
        ServiceWaterHeating[i] = 0.20
    elif count >=13 and count <14:
        ServiceWaterHeating[i] = 0.19
    elif count >=14 and count <15:
        ServiceWaterHeating[i] = 0.15
    elif count >=15 and count <16:
        ServiceWaterHeating[i] = 0.13
    elif count >=16 and count <17:
        ServiceWaterHeating[i] = 0.14
    elif count >=17 and count < 21:
        ServiceWaterHeating[i] = 0.07
    elif count >=21 and count < 22:
        ServiceWaterHeating[i] = 0.09
    elif count >=22 and count <= 24:
        ServiceWaterHeating[i] = 0.05
    
    #increase count
    #reset count to 1 if it has reached 24
    if count == 24:
        count = 1
    else:
        count = count + 1
        
    #for sundays
    if daycount % 7 == 3:
        if count <5:
            ServiceWaterHeating[i] = 0.04
        if count >=5 and count < 6:
            ServiceWaterHeating[i] = 0.07
        if count >=6 and count < 11:
            ServiceWaterHeating[i] = 0.04
        if count >=11 and count < 13:
            ServiceWaterHeating[i] = 0.06
        if count >=13 and count < 14:
            ServiceWaterHeating[i] = 0.09
        if count >=14 and count < 15:
            ServiceWaterHeating[i] = 0.06
        if count >=15 and count < 21:
            ServiceWaterHeating[i] = 0.04
        if count >=21 and count < 22:
            ServiceWaterHeating[i] = 0.07
        if count >=22 and count <= 24:
            ServiceWaterHeating[i] = 0.04

    daycount = daycount + 1


#E for energy, A/H/O/Q for cities, 3 for 2013 and 4 for 2014
EA3=[]
EA4=[]
EH3=[]
EH4=[]
EO3=[]
EO4=[]
EQ3=[]
EQ4=[]
#W for weather and schedule, B/H/O/Q for cities, 3 for 2013 and 4 for 2014
WB3=[]
WB4=[]
WH3=[]
WH4=[]
WO3=[]
WO4=[]
WQ3=[]
WQ4=[]

#e for scheduled variable and w for weather and schedule variable (from literature)
e=[EA3,EA4,EH3,EH4,EO3,EO4,EQ3,EQ4]
w=[WB3,WB4,WH3,WH4,WO3,WO4,WQ3,WQ4]

#result=pd.DataFrame(cal)

jan=745
feb=1417
mar=2161
apr=2881
may=3625
jun=4345
jul=5089
aug=5833
sep=6553
octo=7297
nov=8017
dec=8761

for i in range (len(e)):

    e[i].append(sheet_order[i]['Electricity:Facility [J](Hourly)'])
    e[i].append(sheet_order[i]["Gas:Facility [J](Hourly)"])
    ae[i]=np.array(e[i])
    print(ae[i].shape)
    print(type(ae[i]))
    ae[i]=np.transpose(np.array(e[i]))
#    aet[i]=np.transpose(ae[i])
    print(ae[i].shape)
    print(type(ae[i]))

for i in range (len(e)):
    
    w[i].append(sheet_order2[i]["DB ( C)"])
    w[i].append(sheet_order2[i]["RH(%)"])
    w[i].append(sheet_order2[i]["DirNormal Rad (Wh/m2)"])
    w[i].append(sheet_order2[i]["Wind Speed (m/s)"])
    w[i].append(sheet_order2[i]["Precipit Water (mm)"])
    w[i].append(Lighting[:8760])
    w[i].append(Occupancy[:8760])
    w[i].append(ServiceWaterHeating[:8760])
    aw[i]=np.array(w[i])
#    awt[i]=np.transpose(aw[i])
#display(aw)
    print(aw[i].shape)
    print(type(aw[i]))
from sklearn.neural_network import MLPRegressor
from sklearn.model_selection import train_test_split

for i in range (len(e)):
    X_train, X_test, y_train, y_test = train_test_split(w[i], e[i], random_state=1)
    print(X_train[:10])
    print(X_test[:10])

    mlp = MLPRegressor(random_state=0).fit(X_train, y_train)

    mglearn.plots.plot_2d_separator(mlp, X_train, fill=True, alpha=.3)
    mglearn.discrete_scatter(X_train[:, 0], X_train[:, 1], y_train)


    

